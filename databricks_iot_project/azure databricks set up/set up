def mount_adls(storage_account_name: str, container_name: str, secret_scope: str, client_id_key: str, tenant_id_key: str, client_secret_key: str):
    client_id = dbutils.secrets.get(scope=secret_scope, key=client_id_key)
    tenant_id = dbutils.secrets.get(scope=secret_scope, key=tenant_id_key)
    client_secret = dbutils.secrets.get(scope=secret_scope, key=client_secret_key)

    configs = {
        "fs.azure.account.auth.type": "OAuth",
        "fs.azure.account.oauth.provider.type": "org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider",
        "fs.azure.account.oauth2.client.id": client_id,
        "fs.azure.account.oauth2.client.secret": client_secret,
        "fs.azure.account.oauth2.client.endpoint": f"https://login.microsoftonline.com/{tenant_id}/oauth2/token"
    }

    mount_point = f"/mnt/{storage_account_name}/{container_name}"
    if any(mount.mountPoint == mount_point for mount in dbutils.fs.mounts()):
        dbutils.fs.unmount(mount_point)

    dbutils.fs.mount(
        source=f"abfss://{container_name}@{storage_account_name}.dfs.core.windows.net/",
        mount_point=mount_point,
        extra_configs=configs
    )
    print(f"Mounted {container_name} to {mount_point}")

# Example usage use your own values to mount
mount_adls(
    storage_account_name="landinglakeiot",
    container_name="raw",
    secret_scope="iot-sensor-scope",
    client_id_key="iot-sensor-client-id",
    tenant_id_key="iot-sensor-tenant-id",
    client_secret_key="iot-sensor-client-secret"
)
# Example usage use your own values to mount

mount_adls("landinglakeiot", "processed", "iot-sensor-scope", "iot-sensor-client-id", "iot-sensor-tenant-id", "iot-sensor-client-secret")
mount_adls("landinglakeiot", "presentation", "iot-sensor-scope", "iot-sensor-client-id", "iot-sensor-tenant-id", "iot-sensor-client-secret")
